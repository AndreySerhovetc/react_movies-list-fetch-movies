{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","getFilm","fetch","then","response","ok","Error","statusText","json","FindMovie","props","addMovie","useState","setTitle","newFilm","setNewFilm","isValid","setValid","isHasFilm","setIsHasFilm","searchMovie","a","searchFilm","Response","Title","Plot","Poster","imdbID","data","find","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","length","onClick","disabled","App","setMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9c1e9a5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","const BASE_URL = ' https://www.omdbapi.com/?apikey=ddf4c823&t=';\n\nexport const getFilm = (title: string) => {\n  return fetch(`${BASE_URL}${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/api';\nimport data from '../../api/movies.json';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [title, setTitle] = useState('');\n  const [newFilm, setNewFilm] = useState<Movie | null>(null);\n  const [isValid, setValid] = useState(true);\n  const [isHasFilm, setIsHasFilm] = useState(false);\n\n  const searchMovie = async () => {\n    const searchFilm = await getFilm(title);\n\n    if (searchFilm.Response === 'False') {\n      setNewFilm(null);\n      setValid(false);\n\n      return;\n    }\n\n    setValid(true);\n\n    setNewFilm({\n      title: searchFilm.Title,\n      description: searchFilm.Plot,\n      imgUrl: searchFilm.Poster,\n      imdbUrl: `https://www.imdb.com/title/${searchFilm.imdbID}/`,\n      imdbId: searchFilm.imdbID,\n    });\n    setTitle('');\n\n    if (data.find(movie => movie.imdbId === searchFilm.imdbID)) {\n      setIsHasFilm(true);\n    } else {\n      setIsHasFilm(false);\n    }\n  };\n\n  const addNewFilm = () => {\n    if (newFilm) {\n      addMovie(newFilm);\n      setNewFilm(null);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setValid(true);\n\n    if (title.length === 0) {\n      setValid(true);\n      setIsHasFilm(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': !isValid,\n                },\n              )}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n          {isValid || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!newFilm || isHasFilm}\n              onClick={addNewFilm}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isHasFilm && (\n          <span className=\"error\">This film already added choose another</span>\n        )}\n        {newFilm && (\n          <MovieCard {...newFilm} />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovie([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}